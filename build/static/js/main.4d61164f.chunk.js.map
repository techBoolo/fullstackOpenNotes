{"version":3,"sources":["services/note.js","components/Note/index.js","utils/errorMessage.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","data","create","newNote","post","update","id","updateNote","put","remove","delete","response","notesapi","Note","note","updateImportance","removeNote","useState","important","setImportant","handleChecked","ev","target","checked","_id","style","display","gridTemplateColumns","justifyContent","alignItems","borderBottom","padding","content","type","onChange","onClick","justifySelf","errorMessage","error","message","request","statusText","App","notes","setNotes","setNote","showAll","setShowAll","filteredNotes","setFilteredNotes","notification","setNotification","setNotificationMessage","notificationMessage","setTimeout","handleSubmit","preventDefault","trim","date","Date","toISOString","notesService","importance","find","updatedNote","map","deletedCount","filter","useEffect","getNotes","color","border","fontSize","onSubmit","value","marginRight","htmlFor","marginLeft","width","name","margin","textAlign","listStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d61164f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = async () => {\n  const { data } = await axios.get(`${baseUrl}`)\n  return data\n}\n\nconst create = async (newNote) => {\n  const { data } = await axios.post(`${baseUrl}`, newNote)\n  return data\n}\n\nconst update = async (id, updateNote) => {\n  try{\n    const { data } = await axios.put(`${baseUrl}/${id}`, updateNote)\n    return data\n  }catch(error) {\n    throw error\n  }\n}\n\nconst remove = async (id) => {\n  try {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response.data\n  }catch(error) {\n    throw error\n  }\n}\n\nconst notesapi = {\n  getAll,\n  create,\n  update,\n  remove\n}\nexport default  notesapi\n","import { useState } from 'react'\n\nconst Note = ({ note, updateImportance, removeNote }) => {\n  const [ important, setImportant ] = useState(note.important)\n\n  const handleChecked = async (ev) => {\n    setImportant(ev.target.checked)\n    updateImportance(note._id, ev.target.checked)\n  }\n  return (\n    <li \n      style={{ \n        display: 'grid',  \n        gridTemplateColumns: '2fr 1fr 1fr', \n        justifyContent: 'center', \n        alignItems: 'center',\n        borderBottom: 'dashed 1px #333',\n        padding: '10px'\n      }}\n    >\n      <span>{note.content}</span>\n      <input \n        type='checkbox' \n        checked={important} \n        onChange={handleChecked}\n      />\n      <button onClick={() => removeNote(note._id)} style={{ justifySelf: 'center' }}>del</button>\n    </li>\n  )\n}\n\nexport default Note\n","const errorMessage = (error) => {\n  if(error.response && error.response.data) {\n    return error.response.data.message\n  } else if(error.request && error.request.statusText) {\n    return error.request.statusText\n  } else {\n    return error.message\n  }\n}\n\nexport default errorMessage\n","import { useState, useEffect } from 'react'\nimport notesService from './services/note.js'\nimport Note from './components/Note/'\nimport errorMessage from './utils/errorMessage.js'\n\nconst App = () => {\n  const [ notes, setNotes ] = useState([])\n  const [ note, setNote ] = useState('')\n  const [ important, setImportant ] = useState(false)\n  const [ showAll, setShowAll ] = useState(true)\n  const [ filteredNotes, setFilteredNotes ] = useState(notes)\n  const [ notification, setNotification ] = useState(null)\n\n  const setNotificationMessage = (notificationMessage) => {\n    setNotification(notificationMessage)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n  const handleSubmit = async (ev) => {\n    ev.preventDefault()\n    if(note.trim()) {\n      let newNote = {\n        content: note,\n        date: new Date().toISOString(),\n        important \n      }\n      newNote = await notesService.create(newNote)\n      setNotes([...notes, newNote])\n      setNote('')\n      setImportant(false)\n    } else {\n      return  null\n    }\n  }\n\n  const updateImportance = async (id, importance) => {\n    try {\n      const note = notes.find(note => note._id === id)\n      const updateNote = {\n        important: importance\n      }\n      const updatedNote = await notesService.update(id, updateNote)\n      setNotes(notes.map(note => note._id === id ? updatedNote : note))\n    }catch(error) {\n      const message = errorMessage(error)\n      setNotificationMessage({ message })\n    }\n  }\n\n  const removeNote = async (id) => {\n    try {\n      const response = await notesService.remove(id)\n      if(response.deletedCount > 0) {\n        setNotes(notes.filter(note => note._id !== id ))\n      }\n    }catch(error) {\n      const message = errorMessage(error)\n      setNotificationMessage({ message })\n    }\n  }\n\n  const handleShowAll = (ev) => {\n    setShowAll(ev.target.checked)  \n  }\n\n  useEffect(() => {\n    const getNotes = async () => {\n      const notes = await notesService.getAll()\n      setNotes(notes)\n    }\n    getNotes()\n  }, [notification])\n\n  useEffect(() => {\n    setFilteredNotes( showAll ? notes : notes.filter(note => note.important === false))\n  }, [showAll, notes])\n\n  return (\n    <div>\n      { notification && \n        <div style={{ color: 'red', padding: '10px', border: '1px dashed red', fontSize: '1.5rem'}}>{notification.message}</div> \n      }\n      <h4>New Note</h4>\n      <form onSubmit={handleSubmit}>\n        <input value={note} onChange={(ev) => setNote(ev.target.value)} style={{ padding: '5px', marginRight: '10px'}}/>\n        <input type='checkbox' id='important' checked={important} onChange={(ev) => setImportant(ev.target.checked)}/>\n        <label htmlFor='important'>important</label>\n        <button type='submit' style={{ marginLeft: '10px', padding: '5px', width: '60px'}}>add</button>\n      </form>\n      <h4>List of Notes</h4>\n      <div>\n        <input \n          type='checkbox' \n          id='showall' \n          name='showall' \n          checked={showAll} \n          onChange={handleShowAll} \n        />\n        <label htmlFor='showall'>Show All</label>\n      </div>\n      <div style={{ margin: '30px'}}>\n      <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', textAlign: 'center', borderBottom: '1px solid'}}>\n        <h4>Content</h4>\n        <p>important</p>\n        <p>action</p>\n      </div>\n      <ul style={{ listStyle: 'none', padding: '0px 0' }}>\n        {\n          filteredNotes.map(note  => (\n            <Note \n              key={note._id} \n              note={note} \n              updateImportance={updateImportance} \n              removeNote={removeNote}\n            />\n          ))\n        }\n      </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}